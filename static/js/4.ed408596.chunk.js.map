{"version":3,"sources":["../node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/Container/Container.js","components/Views/loginPage/SignIn.jsx","components/Views/loginPage/LoginPage.jsx"],"names":["html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","body","theme","_extends","color","palette","text","primary","typography","body2","backgroundColor","background","default","common","white","withStyles","fontWeight","fontWeightBold","margin","name","props","_props$children","children","classes","React","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","Typography","ref","_props$align","align","className","_props$color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","clsx","root","concat","capitalize","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","createSvgIcon","d","Avatar","alt","childrenProp","_props$component","imgProps","sizes","src","srcSet","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","alignItems","justifyContent","flexShrink","fontFamily","fontSize","pxToRem","lineHeight","borderRadius","userSelect","type","grey","circle","circular","rounded","shape","square","objectFit","textIndent","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","String","_defineProperty","marginLeft","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","useStyles","makeStyles","paper","marginTop","flexDirection","avatar","form","submit","SignIn","onChangeEmail","onChangePassword","onSubmitForm","CssBaseline","onSubmit","noValidate","TextField","onChange","required","fullWidth","id","label","autoComplete","autoFocus","Button","LoginPage","dispatch","useDispatch","useState","email","setEmail","password","setPassword","e","preventDefault","login","target"],"mappings":"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","file":"static/js/4.ed408596.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'circular', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', \n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn({onChangeEmail,onChangePassword,onSubmitForm}) {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit = {onSubmitForm} noValidate>\n          <TextField\n          onChange = {onChangeEmail}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n          onChange = {onChangePassword}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n        \n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n\n        </form>\n      </div>\n    </Container>\n  );\n}","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../../redux/authRedux/authOperations';\nimport SignIn from './SignIn'\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n  const handleChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(login({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <div>\n      <SignIn onSubmitForm={handleSubmit} onChangePassword={handleChangePassword} onChangeEmail={handleChangeEmail}/>\n      \n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}